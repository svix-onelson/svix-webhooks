/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};
        
                #[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
                pub struct SinkInOneOf1 {
                        #[serde(rename = "accessKey")]
                        pub access_key: String,
                        #[serde(rename = "queueDsn")]
                        pub queue_dsn: String,
                        #[serde(rename = "region")]
                        pub region: String,
                        #[serde(rename = "secretKey")]
                        pub secret_key: String,
                        #[serde(rename = "type")]
                        pub r#type: Type,
                    }

                    impl SinkInOneOf1 {
                    pub fn new(access_key: String, queue_dsn: String, region: String, secret_key: String, r#type: Type) -> SinkInOneOf1 {
                SinkInOneOf1 {
                    access_key,
                    queue_dsn,
                    region,
                    secret_key,
                    r#type,
                    }
                    }
                    }
                    /// 
                    #[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
                    pub enum Type {
                            #[serde(rename = "sqs")]
                        Sqs,
                    }

                    impl Default for Type {
                    fn default() -> Type {
                        Self::Sqs
                    }
                    }

