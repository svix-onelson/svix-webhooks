/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};
        
                #[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
                pub struct StreamEventTypePatch {
                        #[serde(rename = "description", deserialize_with = "Option::deserialize")]
                        pub description: Option<String>,
                        /// The event type's name
                        #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
                        pub name: Option<Option<String>>,
                    }

                    impl StreamEventTypePatch {
                    pub fn new(description: Option<String>) -> StreamEventTypePatch {
                StreamEventTypePatch {
                    description,
                    name: None,
                    }
                    }
                    }

