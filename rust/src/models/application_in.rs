/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};
        
                #[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
                pub struct ApplicationIn {
                        #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
                        pub metadata: Option<std::collections::HashMap<String, String>>,
                        #[serde(rename = "name")]
                        pub name: String,
                        #[serde(rename = "rateLimit", skip_serializing_if = "Option::is_none")]
                        pub rate_limit: Option<i32>,
                        /// Optional unique identifier for the application.
                        #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
                        pub uid: Option<String>,
                    }

                    impl ApplicationIn {
                    pub fn new(name: String) -> ApplicationIn {
                ApplicationIn {
                    metadata: None,
                    name,
                    rate_limit: None,
                    uid: None,
                    }
                    }
                    }

