/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};
        
                #[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
                pub struct EnvironmentIn {
                        #[serde(rename = "eventTypes", skip_serializing_if = "Option::is_none")]
                        pub event_types: Option<Vec<models::EventTypeIn>>,
                        #[serde(rename = "settings", deserialize_with = "Option::deserialize")]
                        pub settings: Option<serde_json::Value>,
                        #[serde(rename = "transformationTemplates", skip_serializing_if = "Option::is_none")]
                        pub transformation_templates: Option<Vec<models::TemplateIn>>,
                    }

                    impl EnvironmentIn {
                    pub fn new(settings: Option<serde_json::Value>) -> EnvironmentIn {
                EnvironmentIn {
                    event_types: None,
                    settings,
                    transformation_templates: None,
                    }
                    }
                    }

