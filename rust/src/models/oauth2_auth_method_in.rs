/*
 * Svix API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

#[allow(unused_imports)]
use crate::models;
#[allow(unused_imports)]
use serde::{Deserialize, Serialize};
        
            /// Oauth2AuthMethodIn : The method used for authenticating to the OAuth authorization server.  `clientSecretJwt` will construct a JWT used for authentication with the oauth authorization server. This method is less commonly used and may not be supported by all oauth providers. `clientSecretBasic` will authenticate to the oauth authorization server using an `Authorization` header with the client secret as the value. This is the most common means of authentication. `clientSecretPost` will authenticate to the oauth authorization server by passing the client secret in a `client_secret` field in the request body. This method may not be supported by all oauth providers, and in general `clientSecretBasic` should be preferred.
                /// The method used for authenticating to the OAuth authorization server.  `clientSecretJwt` will construct a JWT used for authentication with the oauth authorization server. This method is less commonly used and may not be supported by all oauth providers. `clientSecretBasic` will authenticate to the oauth authorization server using an `Authorization` header with the client secret as the value. This is the most common means of authentication. `clientSecretPost` will authenticate to the oauth authorization server by passing the client secret in a `client_secret` field in the request body. This method may not be supported by all oauth providers, and in general `clientSecretBasic` should be preferred.
                #[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
                pub enum Oauth2AuthMethodIn {
                        #[serde(rename = "clientSecretJwt")]
                        ClientSecretJwt,
                                            #[serde(rename = "clientSecretBasic")]
                        ClientSecretBasic,
                                            #[serde(rename = "clientSecretPost")]
                        ClientSecretPost,
                    
                }

                impl std::fmt::Display for Oauth2AuthMethodIn {
                fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
                match self {
                        Self::ClientSecretJwt => write!(f, "clientSecretJwt"),
                        Self::ClientSecretBasic => write!(f, "clientSecretBasic"),
                        Self::ClientSecretPost => write!(f, "clientSecretPost"),
                }
                }
                }

            impl Default for Oauth2AuthMethodIn {
            fn default() -> Oauth2AuthMethodIn {
                Self::ClientSecretJwt
            }
            }

